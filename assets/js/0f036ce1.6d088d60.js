"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9114],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return g}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),f=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=f(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},l=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),l=f(t),g=o,d=l["".concat(u,".").concat(g)]||l[g]||p[g]||i;return t?r.createElement(d,a(a({ref:n},s),{},{components:t})):r.createElement(d,a({ref:n},s))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=l;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var f=2;f<i;f++)a[f]=t[f];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}l.displayName="MDXCreateElement"},3653:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return c},metadata:function(){return f},toc:function(){return p}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],c={},u="Configuration",f={unversionedId:"reference/configuration/index",id:"reference/configuration/index",title:"Configuration",description:"Configuration of Furiko is split into two main categories: bootstrap configuration and dynamic configuration.",source:"@site/docs/reference/configuration/index.md",sourceDirName:"reference/configuration",slug:"/reference/configuration/",permalink:"/docs/next/reference/configuration/",draft:!1,editUrl:"https://github.com/furiko-io/website/tree/main/docs/reference/configuration/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Reference",permalink:"/docs/next/reference/"},next:{title:"Bootstrap Configuration",permalink:"/docs/next/reference/configuration/bootstrap"}},s={},p=[{value:"Bootstrap Configuration",id:"bootstrap-configuration",level:2},{value:"Dynamic Configuration",id:"dynamic-configuration",level:2}],l={toc:p};function g(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"Configuration of Furiko is split into two main categories: ",(0,i.kt)("strong",{parentName:"p"},"bootstrap configuration")," and ",(0,i.kt)("strong",{parentName:"p"},"dynamic configuration"),"."),(0,i.kt)("h2",{id:"bootstrap-configuration"},"Bootstrap Configuration"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Bootstrap configuration")," refers to configuration fields that are specified when starting a component, such as a controller or a webhook server. This configuration typically contains information about port numbers to listen on, whether leader election is enabled, and so on. Modifying these configuration values require a restart of the component to take effect."),(0,i.kt)("p",null,"The bootstrap configuration is almost identical for almost all components. More details can be found in ",(0,i.kt)("a",{parentName:"p",href:"/docs/next/reference/configuration/bootstrap"},"Bootstrap Config"),"."),(0,i.kt)("h2",{id:"dynamic-configuration"},"Dynamic Configuration"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Dynamic configuration"),", on the other hand, refers to configuration that is stored in some remote source, typically a ConfigMap, which will take effect immediately upon updating it."),(0,i.kt)("p",null,"More details can be found in ",(0,i.kt)("a",{parentName:"p",href:"/docs/next/reference/configuration/dynamic"},"Dynamic Config"),"."))}g.isMDXComponent=!0}}]);