"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9404],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return c}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=d(n),c=i,k=u["".concat(p,".").concat(c)]||u[c]||m[c]||r;return n?a.createElement(k,l(l({ref:t},s),{},{components:n})):a.createElement(k,l({ref:t},s))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var d=2;d<r;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2275:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return c},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return m}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),l=["components"],o={sidebar_position:20},p="Context Variables",d={unversionedId:"execution/jobconfig/context-variables",id:"version-v0.2.1/execution/jobconfig/context-variables",title:"Context Variables",description:"This page introduces the concept of Context Variables, which allows Furiko users to parameterize their jobs based on certain variables.",source:"@site/versioned_docs/version-v0.2.1/execution/jobconfig/context-variables.md",sourceDirName:"execution/jobconfig",slug:"/execution/jobconfig/context-variables",permalink:"/docs/execution/jobconfig/context-variables",draft:!1,editUrl:"https://github.com/furiko-io/website/tree/main/versioned_docs/version-v0.2.1/execution/jobconfig/context-variables.md",tags:[],version:"v0.2.1",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"Concurrency",permalink:"/docs/execution/jobconfig/concurrency"},next:{title:"Job Options",permalink:"/docs/execution/jobconfig/job-options"}},s={},m=[{value:"Overview",id:"overview",level:2},{value:"Introduction",id:"introduction",level:3},{value:"Usage",id:"usage",level:3},{value:"Contexts",id:"contexts",level:2},{value:"<code>jobconfig</code>",id:"jobconfig",level:3},{value:"<code>job</code>",id:"job",level:3},{value:"<code>task</code>",id:"task",level:3},{value:"<code>option</code>",id:"option",level:3},{value:"Substitutions",id:"substitutions",level:2}],u={toc:m};function c(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"context-variables"},"Context Variables"),(0,r.kt)("p",null,"This page introduces the concept of ",(0,r.kt)("strong",{parentName:"p"},"Context Variables"),", which allows Furiko users to parameterize their jobs based on certain variables."),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("h3",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"A variable looks like ",(0,r.kt)("inlineCode",{parentName:"p"},"${job.name}"),". This context variable uses the context ",(0,r.kt)("inlineCode",{parentName:"p"},"job"),", with the variable name ",(0,r.kt)("inlineCode",{parentName:"p"},"name"),"."),(0,r.kt)("p",null,"Users who are familiar with Rundeck may find this concept familiar, as it was inspired by the corresponding feature in Rundeck: ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rundeck.com/docs/manual/job-workflows.html#context-variables"},"https://docs.rundeck.com/docs/manual/job-workflows.html#context-variables")),(0,r.kt)("h3",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Context variables can be used inside the Job/JobConfig's task template, like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-{.yaml",metastring:'title="Example TaskTemplate"}',title:'"Example','TaskTemplate"}':!0},'taskTemplate:\n  pod:\n    spec:\n      containers:\n        - name: job-container\n          args:\n            - echo\n            - "Job Name: ${job.name}"\n')),(0,r.kt)("p",null,"For ",(0,r.kt)("inlineCode",{parentName:"p"},"pod"),", only the following fields support context variable substitution:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".spec.containers.*.image")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".spec.containers.*.command.*")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".spec.containers.*.args.*")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".spec.containers.*.env.*.value")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".spec.initContainers.*.image")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".spec.initContainers.*.command.*")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".spec.initContainers.*.args.*")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".spec.initContainers.*.env.*.value"))),(0,r.kt)("p",null,"Variables will be substituted as a string as-is in the fields that they are defined in. If using in the ",(0,r.kt)("inlineCode",{parentName:"p"},"command")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"args")," fields, you may need to escape them with double quotes (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},'"${job.name}"'),")."),(0,r.kt)("h2",{id:"contexts"},"Contexts"),(0,r.kt)("p",null,"Each context corresponds to a stage in the Job's lifecycle when certain variables are made available. The following is a list of all contexts and available variables."),(0,r.kt)("h3",{id:"jobconfig"},(0,r.kt)("inlineCode",{parentName:"h3"},"jobconfig")),(0,r.kt)("p",null,"Variables are evaluated when creating a Job from a JobConfig, such as during cron scheduling or ad-hoc starts of a Job."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"jobconfig.name")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the JobConfig that created the Job."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"my-example-jobconfig"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"jobconfig.namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"Namespace of the JobConfig that created the Job."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"furiko"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"jobconfig.uid")),(0,r.kt)("td",{parentName:"tr",align:null},"UID of the JobConfig that created the Job."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"4247b21e-713f-46db-b8f5-39917893577e"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"jobconfig.cron_schedule")),(0,r.kt)("td",{parentName:"tr",align:null},"Cron expression that was used to schedule the Job."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"H/15 * * * *"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"jobconfig.cron_timezone")),(0,r.kt)("td",{parentName:"tr",align:null},"Cron timezone that was used to schedule the Job."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Asia/Singapore"))))),(0,r.kt)("h3",{id:"job"},(0,r.kt)("inlineCode",{parentName:"h3"},"job")),(0,r.kt)("p",null,"Variables are evaluated when creating a task for a Job. This takes place after the Job is started."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"job.name")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Job that created the task."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"my-example-jobconfig.1646586480"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"job.namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"Namespace of the Job that created the task."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"furiko"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"job.type")),(0,r.kt)("td",{parentName:"tr",align:null},"Type of Job, e.g. ",(0,r.kt)("inlineCode",{parentName:"td"},"Adhoc"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"Scheduled"),"."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Adhoc"))))),(0,r.kt)("h3",{id:"task"},(0,r.kt)("inlineCode",{parentName:"h3"},"task")),(0,r.kt)("p",null,"Variables are evaluated when creating a task."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"task.name")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the task."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"my-example-jobconfig.1646586480.1"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"task.namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"Namespace of the task."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"furiko"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"task.retry_index")),(0,r.kt)("td",{parentName:"tr",align:null},"The retry index of the task, starts from 1."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1"))))),(0,r.kt)("p",null,"Additionally, the following variables are included when a ",(0,r.kt)("a",{parentName:"p",href:"/docs/execution/job/parallelism"},"parallel job")," is created:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"task.index_num")),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"withCount")," is used, the task index number (from 0...N-1)."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"2"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"task.index_key")),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"withKeys")," is used, the task index key (as a string)."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"item-3"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"task.index_matrix.<key>")),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"withMatrix")," is used, the value of the corresponding key in the matrix for this task index."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"value-1"))))),(0,r.kt)("h3",{id:"option"},(0,r.kt)("inlineCode",{parentName:"h3"},"option")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"option")," context is a special context that allows for user-defined inputs to parameterize the Job."),(0,r.kt)("p",null,"For more information, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/execution/jobconfig/job-options"},"Job Options"),"."),(0,r.kt)("h2",{id:"substitutions"},"Substitutions"),(0,r.kt)("p",null,"Variables are evaluated based on their context, but substitution is only performed only when creating the task object (i.e. when creating the ",(0,r.kt)("inlineCode",{parentName:"p"},"PodSpec"),"). Because of this, the Job exposes a ",(0,r.kt)("inlineCode",{parentName:"p"},"substitutions")," field which captures all evaluated substitutions so far before finally evaluating it at the end."),(0,r.kt)("p",null,"Users may also override certain context variables by manually specifying it in the ",(0,r.kt)("inlineCode",{parentName:"p"},"substitutions")," field when creating the Job. They will take precedence over all other variables that are evaluated (context variables and option variables)."),(0,r.kt)("p",null,"For example, given the following configuration below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-{.yaml",metastring:'title="Example: Custom Substitutions"}',title:'"Example:',Custom:!0,'Substitutions"}':!0},'apiVersion: execution.furiko.io/v1alpha1\nkind: Job\nmetadata:\n  generateName: dummy-sample-\nspec:\n  configName: jobconfig-sample\n  substitutions:\n    option.username: "mary"\n    jobconfig.name: "dummy-sample"\n  optionValues: |-\n    username: "bob"\n    expiry: "168h"\n')),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"option.username")," will be evaluated to ",(0,r.kt)("inlineCode",{parentName:"li"},"mary")," (",(0,r.kt)("inlineCode",{parentName:"li"},"substitutions")," takes precedence)"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"option.expiry")," will be evaluated to ",(0,r.kt)("inlineCode",{parentName:"li"},"168h")," (from ",(0,r.kt)("inlineCode",{parentName:"li"},"optionValues"),")"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"jobconfig.name")," will be evaluated to ",(0,r.kt)("inlineCode",{parentName:"li"},"dummy-sample")," (",(0,r.kt)("inlineCode",{parentName:"li"},"substitutions")," takes precedence)"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"jobconfig.namespace")," will be evaluated to ",(0,r.kt)("inlineCode",{parentName:"li"},"default")," (from the ",(0,r.kt)("inlineCode",{parentName:"li"},"jobconfig")," context)")))}c.isMDXComponent=!0}}]);