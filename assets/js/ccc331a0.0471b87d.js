"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8788],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=o.createContext({}),l=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return o.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},f=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),f=l(t),m=a,d=f["".concat(c,".").concat(m)]||f[m]||p[m]||r;return t?o.createElement(d,i(i({ref:n},u),{},{components:t})):o.createElement(d,i({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=f;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<r;l++)i[l]=t[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},8645:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var o=t(7462),a=t(3366),r=(t(7294),t(3905)),i=["components"],s={sidebar_position:999},c="Sample Configuration",l={unversionedId:"execution/job/sample-configuration",id:"version-v0.2.0/execution/job/sample-configuration",title:"Sample Configuration",description:"This page contains sample configurations for creating a Job.",source:"@site/versioned_docs/version-v0.2.0/execution/job/sample-configuration.md",sourceDirName:"execution/job",slug:"/execution/job/sample-configuration",permalink:"/docs/execution/job/sample-configuration",draft:!1,editUrl:"https://github.com/furiko-io/website/tree/main/versioned_docs/version-v0.2.0/execution/job/sample-configuration.md",tags:[],version:"v0.2.0",sidebarPosition:999,frontMatter:{sidebar_position:999},sidebar:"tutorialSidebar",previous:{title:"Garbage Collection",permalink:"/docs/execution/job/garbage-collection"},next:{title:"Operator Manual",permalink:"/docs/category/operator-manual"}},u={},p=[{value:"From JobConfig",id:"from-jobconfig",level:2},{value:"Standalone Job",id:"standalone-job",level:2}],f={toc:p};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sample-configuration"},"Sample Configuration"),(0,r.kt)("p",null,"This page contains sample configurations for creating a Job."),(0,r.kt)("h2",{id:"from-jobconfig"},"From JobConfig"),(0,r.kt)("p",null,"Most of the time, you should be creating Jobs from a JobConfig as follows, as described in ",(0,r.kt)("a",{parentName:"p",href:"/docs/execution/job/adhoc-execution"},"Adhoc Execution"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: execution.furiko.io/v1alpha1\nkind: Job\nmetadata:\n  generateName: jobconfig-sample-\nspec:\n  # Define the JobConfig (in the same namespace) to use as the template for the Job.\n  configName: jobconfig-sample\n\n  # YAML or JSON encoded string of option values to pass to the JobConfig.\n  # Will be evaluated and added to substitutions.\n  optionValues: |-\n    username: Example User\n    image-tag: 3.15\n\n  # Optionally specify conditions for when the Job can start.\n  startPolicy:\n    # Defines the behavior for multiple concurrent Jobs.\n    # If not specified, will default to the JobConfig's concurrency.policy.\n    concurrencyPolicy: Enqueue\n\n    # Start only after this time.\n    startAfter: 2022-03-06T00:27:00+08:00\n")),(0,r.kt)("h2",{id:"standalone-job"},"Standalone Job"),(0,r.kt)("p",null,"You can also create a Job independent of a JobConfig, as described ",(0,r.kt)("a",{parentName:"p",href:"/docs/execution/job/adhoc-execution#independent-jobs"},"here"),". You must specify the ",(0,r.kt)("inlineCode",{parentName:"p"},"template")," yourself."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: execution.furiko.io/v1alpha1\nkind: Job\nmetadata:\n  generateName: jobconfig-sample-\nspec:\n  # Specify the type of Job.\n  type: Adhoc\n\n  # Map of key-value pairs to substitute into the task template.\n  substitutions:\n    option.username: Example User\n\n  # Describes how to create the Job.\n  template:\n    # Specifies how to run the job in parallel.\n    parallelism:\n      # Run 3 tasks in parallel.\n      withCount: 3\n\n      # Wait for all 3 tasks to succeed before deemed as successful.\n      completionStrategy: AllSuccessful\n\n    # Specifies maximum number of attempts for each task, defaults to 1.\n    maxAttempts: 3\n\n    # Optional delay between each task retry.\n    retryDelaySeconds: 10\n\n    # Optional duration in seconds for how long each task should be pending for\n    # until it gets killed.\n    taskPendingTimeoutSeconds: 1800\n\n    # Forbids force deletion of tasks.\n    forbidTaskForceDeletion: true\n\n    # The template for each task to be created by the Job.\n    taskTemplate:\n      # Specify how to create the task as a Pod. This is just a PodTemplateSpec.\n      pod:\n        spec:\n          containers:\n            - args:\n                - echo\n                - "Hello world, ${option.username}!"\n              env:\n                - name: JOBCONFIG_NAME\n                  value: jobconfig-sample\n                - name: JOB_NAME\n                  value: ${job.name}\n                - name: TASK_NAME\n                  value: ${task.name}\n                - name: TASK_INDEX\n                  value: ${task.index_num}\n              image: alpine\n              name: job-container\n              resources:\n                limits:\n                  cpu: 100m\n                  memory: 64Mi\n\n  # Optional duration that the Job should live after it is finished.\n  ttlSecondsAfterFinished: 3600\n')))}m.isMDXComponent=!0}}]);